_git_default_remote () {
  defaultRemote="$(git remote | head -1)"
}

_git_default_branch () {
  [ -z "$defaultRemote" ] && _git_default_remote
  defaultBranch=`git rev-parse --abbrev-ref $defaultRemote/HEAD)`
}

_git_setup_branch_info () {
  branch=`git symbolic-ref -q HEAD`
  if [ -z "$branch" ]; then
	  echo "Detached HEAD - cannot resolve current branch name" >&2
	  return 1
  fi
  branch="${branch##refs/heads/}"
  remote=`git config branch.${branch}.remote`
  tracking=`git config branch.${branch}.merge`
}

gunpushed () {
  local branch remote tracking rbranch
  _git_setup_branch_info
  if [ -n "$remote" -a -n "$tracking" ]; then
	tracking="${tracking##refs/heads/}"
	rbranch="$remote/$tracking"
	echo "UNPUSHED: git log $rbranch..$branch"
	git log $rbranch..$branch
	echo "UNPULLED: git log $branch..$rbranch"
	git log $branch..$rbranch
  fi
}

gpu () {
  local branch remote tracking force defaultRemote
  force="$1"
  _git_setup_branch_info
  if [ -n "$remote" -a -n "$tracking" ]; then
	tracking="${tracking##refs/heads/}"
	if [ "$force" == "force" ]; then
	  echo "gpu: git push --force $remote $tracking"
	  git push --force $remote $tracking
	else
	  echo "gpu: git push $remote $tracking"
	  git push $remote $tracking
	fi
  else
	_git_default_remote
	echo "gpu: ** creating new remote branch $branch **"
	echo "gpu: git push -u $defaultRemote $branch"
	git push -u $defaultRemote $branch
  fi
}

gcopr () {
  local defaultRemote defaultBranch
  _git_default_remote
  _git_default_branch
  local number="$1"
  git checkout "$defaultBranch"
  git fetch "$defaultRemote" pull/$number/head:pr-$number
  git checkout pr-$number
}

